<?xml version='1.0'?>
<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Chassis properties-->
  <xacro:property name="chassis_length" value="0.4"/>
  <xacro:property name="chassis_width" value="0.2"/>
  <xacro:property name="chassis_height" value="0.1"/>
  <xacro:property name="chassis_mass" value="15"/>
  <!-- Caster Wheel properties-->
  <xacro:property name="caster_mass" value="0.2"/>
  <xacro:property name="caster_radius" value="0.05"/>
  <!-- Wheel properties-->
  <xacro:property name="wheel_radius" value="0.1"/>
  <xacro:property name="wheel_length" value="0.05"/>
  <xacro:property name="wheel_mass" value="5"/>
  <xacro:property name="wheel_x" value="${chassis_length/4}"/>
  <xacro:property name="wheel_y" value="${chassis_width/2 + wheel_length/2 + 0.01}"/>
  <xacro:property name="wheel_z" value="0"/>

  <!-- Import the chassis of the robot -->
  <xacro:include filename="$(find my_robot_description)/urdf/chassis.xacro" />
  <!-- Import a macro which constructs a spheric caster wheel -->
  <xacro:include filename="$(find my_robot_description)/urdf/caster_wheel.xacro" />
  <!-- Import a macro which constructs a wheel -->
  <xacro:include filename="$(find my_robot_description)/urdf/wheel.xacro" />
  <!-- Import the camera attached to the chassis -->
  <xacro:include filename="$(find my_robot_description)/urdf/camera.xacro" />
  <!-- Import the hokuyo Lidar  -->
  <xacro:include filename="$(find my_robot_description)/urdf/hokuyo.xacro" />
    <!-- Import colors for Rviz -->
  <xacro:include filename="$(find my_robot_description)/urdf/materials.xacro" />
  <!-- Import all Gazebo-customization elements (plugins and colors) -->
  <xacro:include filename="$(find my_robot_description)/urdf/my_robot.gazebo"/>

  <!-- The base_footprint is the representation of the robot position with respect to the origin 
      of the world. The base_footprint link is a virtual (non-physical) link which has no dimensions 
      or collision areas. Its primary purpose is to enable various packages determine the center 
      of a robot projected to the ground. For example, Navigation2 uses this link to determine the 
      center of a circular footprint used in its obstacle avoidance algorithms-->
  <link name="robot_footprint"/>

  <!-- Chassis -->
  <xacro:box_chassis length="${chassis_length}" width="${chassis_width}" height="${chassis_height}" mass="${chassis_mass}"/>
  <!-- Caster wheel -->
  <xacro:caster_wheel radius="${caster_radius}" mass="${caster_mass}" x="-0.1" z="-0.05"/>
  <!-- Back Left wheel -->
  <xacro:wheel side="left"   mass="${wheel_mass}" x="${wheel_x}" y="${wheel_y}" z="${wheel_z}" radius="${wheel_radius}" length="${wheel_length}"/>
  <!-- Back Right wheel -->
  <xacro:wheel side="right"  mass="${wheel_mass}" x="${wheel_x}" y="${wheel_y}" z="${wheel_z}" radius="${wheel_radius}" length="${wheel_length}"/>
  <!-- Camera -->
  <xacro:my_cam x="${chassis_length/2}"/>
  <!-- Lidar -->
  <xacro:hokuyo x="${chassis_length/4}" z="${chassis_height/2 + 0.05}"/>

</robot>